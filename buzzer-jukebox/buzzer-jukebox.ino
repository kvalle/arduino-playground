#include "notes.h"

double const BPM = 320.0; // beats per minute (quarter notes)
double const PAUSE = 0.3; // portion of note should be silent before next note

const int notes[] = {
  // comments correspond to page/line in sheet at
  // http://www.mariopiano.com/mario-sheet-music-overworld-main-theme.html
  
  // 1/1
  NOTE_E7, NOTE_E7, SILENT, NOTE_E7,
  SILENT, NOTE_C7, NOTE_E7, SILENT,
  NOTE_G7, SILENT, SILENT,
  NOTE_G6, SILENT, SILENT,

  // 1/2
  NOTE_C7, SILENT, SILENT, NOTE_G6,
  SILENT, NOTE_E6, SILENT,
  SILENT, NOTE_A6, SILENT, NOTE_B6,
  SILENT, NOTE_BB6, NOTE_A6, SILENT,

  // 1/3
  NOTE_G6, NOTE_E7, NOTE_G7,
  NOTE_A7, SILENT, NOTE_F7, NOTE_G7,
  SILENT, NOTE_E7, SILENT, NOTE_C7,
  NOTE_D7, NOTE_B6, SILENT, SILENT,

  // 1/4 (same as 1/2)
  NOTE_C7, SILENT, SILENT, NOTE_G6,
  SILENT, NOTE_E6, SILENT,
  SILENT, NOTE_A6, SILENT, NOTE_B6,
  SILENT, NOTE_BB6, NOTE_A6, SILENT,

  // 1/5
  NOTE_G6, NOTE_E7, NOTE_G7,
  NOTE_A7, SILENT, NOTE_F7, NOTE_G7,
  SILENT, NOTE_E7, SILENT, NOTE_C7,
  NOTE_D7, NOTE_B6, SILENT,

  // 2/1
  SILENT, NOTE_G7, NOTE_GB7,
  NOTE_F7, NOTE_DS7, SILENT, NOTE_E7,
  SILENT, NOTE_GS6, NOTE_A6, NOTE_C7,
  SILENT, NOTE_A6, NOTE_C7, NOTE_D7,

  // 2/2
  SILENT, NOTE_G7, NOTE_GB7,
  NOTE_F7, NOTE_DS7, SILENT, NOTE_E7,
  SILENT, NOTE_C8, SILENT, NOTE_C8,
  NOTE_C8, SILENT, SILENT,

  // 2/3
  SILENT, NOTE_G7, NOTE_GB7,
  NOTE_F7, NOTE_DS7, SILENT, NOTE_E7,
  SILENT, NOTE_GS6, NOTE_A6, NOTE_C7,
  SILENT, NOTE_A6, NOTE_C7, NOTE_D7,

  // 2/4
  SILENT, NOTE_EB7, SILENT,
  SILENT, NOTE_D7, SILENT,
  NOTE_C7, SILENT,
  SILENT,

  // 3/1
  SILENT, NOTE_G7, NOTE_GB7,
  NOTE_F7, NOTE_DS7, SILENT, NOTE_E7,
  SILENT, NOTE_GS6, NOTE_A6, NOTE_C7,
  SILENT, NOTE_A6, NOTE_C7, NOTE_D7,

  // 3/2
  SILENT, NOTE_G7, NOTE_GB7,
  NOTE_F7, NOTE_DS7, SILENT, NOTE_E7,
  SILENT, NOTE_C8, SILENT, NOTE_C8,
  NOTE_C8, SILENT, SILENT,

  // 3/3
  SILENT, NOTE_G7, NOTE_GB7,
  NOTE_F7, NOTE_DS7, SILENT, NOTE_E7,
  SILENT, NOTE_GS6, NOTE_A6, NOTE_C7,
  SILENT, NOTE_A6, NOTE_C7, NOTE_D7,

  // 3/4
  SILENT, NOTE_EB7, SILENT,
  SILENT, NOTE_D7, SILENT,
  NOTE_C7, SILENT, SILENT,
  SILENT,

  // // 4/1 (same as 4/3)
  // NOTE_C7, NOTE_C7, SILENT, NOTE_C7,
  // SILENT, NOTE_C7, NOTE_D7, SILENT,
  // NOTE_E7, NOTE_C7, SILENT, NOTE_A6,
  // NOTE_G6, SILENT, SILENT,

  // // 4/2
  // NOTE_C7, NOTE_C7, SILENT, NOTE_C7,
  // SILENT, NOTE_C7, NOTE_D7, NOTE_E7,
  // SILENT,
  // SILENT,

  // // 4/3 (same as 4/1)
  // NOTE_C7, NOTE_C7, SILENT, NOTE_C7,
  // SILENT, NOTE_C7, NOTE_D7, SILENT,
  // NOTE_E7, NOTE_C7, SILENT, NOTE_A6,
  // NOTE_G6, SILENT, SILENT,

  // // 4/4
  // NOTE_E7, NOTE_E7, SILENT, NOTE_E7,
  // SILENT, NOTE_C7, NOTE_E7, SILENT,
  // NOTE_G7, SILENT, SILENT,
  // NOTE_G6, SILENT, SILENT,

  // // 5/1 (same as 2/1 and 4/1)
  // NOTE_C7, SILENT, SILENT, NOTE_G6,
  // SILENT, NOTE_E6, SILENT,
  // SILENT, NOTE_A6, SILENT, NOTE_B6,
  // SILENT, NOTE_BB6, NOTE_A6, SILENT,

  // // 5/2
  // NOTE_G6, NOTE_E7, NOTE_G7,
  // NOTE_A7, SILENT, NOTE_F7, NOTE_G7,
  // SILENT, NOTE_E7, SILENT, NOTE_C7,
  // NOTE_D7, NOTE_B6, SILENT,

  // // 5/3 (same as 5/1)
  // NOTE_C7, SILENT, SILENT, NOTE_G6,
  // SILENT, NOTE_E7, SILENT,
  // SILENT, NOTE_A6, SILENT, NOTE_B6,
  // SILENT, NOTE_BB6, NOTE_A6, SILENT,

  // // 5/4 (same as 5/2)
  // NOTE_G6, NOTE_E7, NOTE_G7,
  // NOTE_A7, SILENT, NOTE_F7, NOTE_G7,
  // SILENT, NOTE_E7, SILENT, NOTE_C7,
  // NOTE_D7, NOTE_B6, SILENT,

  // // 6/1 (same as 6/3, 7/1 and 7/3)
  // NOTE_E7, NOTE_C7, SILENT, NOTE_G6,
  // SILENT, NOTE_GS6, SILENT,
  // NOTE_A6, NOTE_F7, SILENT, NOTE_F7,
  // NOTE_A6, SILENT, SILENT,

  // // 6/2 (same as 7/2)
  // NOTE_B6, NOTE_A7, NOTE_A7,
  // NOTE_A7, NOTE_G7, NOTE_F7,
  // NOTE_E7, NOTE_C7, SILENT, NOTE_A6,
  // NOTE_G6, SILENT, SILENT,

  // // 6/3 (same as 6/1, 7/1 and 7/3)
  // NOTE_E7, NOTE_C7, SILENT, NOTE_G6,
  // SILENT, NOTE_GS6, SILENT,
  // NOTE_A6, NOTE_F7, SILENT, NOTE_F7,
  // NOTE_A6, SILENT, SILENT,

  // // 6/4
  // NOTE_B6, NOTE_F7, SILENT, NOTE_F7,
  // NOTE_F7, NOTE_E7, NOTE_D7,
  // NOTE_C7, NOTE_E6, SILENT, NOTE_E6,
  // NOTE_C6, SILENT, SILENT,

  // // 7/1 (same as 6/1, 6/3 and 7/3)
  // NOTE_E7, NOTE_C7, SILENT, NOTE_G6,
  // SILENT, NOTE_GS6, SILENT,
  // NOTE_A6, NOTE_F7, SILENT, NOTE_F7,
  // NOTE_A6, SILENT, SILENT,

  // // 7/2 (same as 6/2)
  // NOTE_B6, NOTE_A7, NOTE_A7,
  // NOTE_A7, NOTE_G7, NOTE_F7,
  // NOTE_E7, NOTE_C7, SILENT, NOTE_A6,
  // NOTE_G6, SILENT, SILENT,

  // // 7/3 (same as 6/1, 6/3 and 7/1)
  // NOTE_E7, NOTE_C7, SILENT, NOTE_G6,
  // SILENT, NOTE_GS6, SILENT,
  // NOTE_A6, NOTE_F7, SILENT, NOTE_F7,
  // NOTE_A6, SILENT, SILENT,

  // // 7/4 (same as 6/4)
  // NOTE_B6, NOTE_F7, SILENT, NOTE_F7,
  // NOTE_F7, NOTE_E7, NOTE_D7,
  // NOTE_C7, NOTE_E6, SILENT, NOTE_E6,
  // NOTE_C6, SILENT, SILENT,
};

const double duration[] = {

  // 1/1 
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, HALF,
  QUARTER, QUARTER, HALF,

  // 1/2
  QUARTER, QUARTER, QUARTER, QUARTER,
  HALF, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,

  // 1/3
  THIRD,   THIRD,   THIRD,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,

  // 1/4
  QUARTER, QUARTER, QUARTER, QUARTER,
  HALF, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,

  // 1/5
  THIRD,   THIRD,   THIRD,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, HALF,

  // 2/1
  HALF, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,

  // 2/2
  HALF, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, HALF,

  // 2/3
  HALF, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,

  // 2/4
  HALF, QUARTER, QUARTER,
  QUARTER, QUARTER, HALF,
  QUARTER, QUARTER, HALF,
  WHOLE,

  // 3/1
  HALF, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,

  // 3/2
  HALF, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, HALF,

  // 3/3
  HALF, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,
  QUARTER, QUARTER, QUARTER, QUARTER,

  // 3/4
  HALF, QUARTER, QUARTER,
  QUARTER, QUARTER, HALF,
  QUARTER, QUARTER, HALF,
  WHOLE,

  // // 4/1
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,
  // //4/2
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // WHOLE,

  // // 4/3
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,

  // // 4/4
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,
  // QUARTER, QUARTER, HALF,

  // // 5/1
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // HALF, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,

  // // 5/2
  // THIRD, THIRD, THIRD,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,

  // // 5/3
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // HALF, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,

  // // 5/4
  // THIRD, THIRD, THIRD,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,

  // // 6/1
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // HALF, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,

  // // 6/2
  // THIRD, THIRD, THIRD,
  // THIRD, THIRD, THIRD,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,

  // // 6/3  
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // HALF, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,

  // // 6/4
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // THIRD, THIRD, THIRD,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,

  // // 7/1
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // HALF, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,

  // // 7/2
  // THIRD, THIRD, THIRD,
  // THIRD, THIRD, THIRD,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,

  // // 7/3
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // HALF, QUARTER, QUARTER,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,

  // // 7/4
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // THIRD, THIRD, THIRD,
  // QUARTER, QUARTER, QUARTER, QUARTER,
  // QUARTER, QUARTER, HALF,
};



int buzzerPin = 3;

void setup(void)
{
  Serial.begin(9600);
  pinMode(buzzerPin, OUTPUT);
  pinMode(13, OUTPUT);

  play();  
}

void loop() {}

void play() {
  // duration of a whole note in ms
  int whole_duration = (60.0f / BPM) * 4 * 1000;
  
  int numberOfNotes = sizeof(notes) / sizeof(int);
  for (int note = 0; note < numberOfNotes; note++) {
    int noteDuration = whole_duration * duration[note];

    // play note
    int playDuration = noteDuration * (1 - PAUSE);
    buzz(buzzerPin, notes[note], playDuration);

    // pause before next note
    int pauseDuration = noteDuration - playDuration;
    delay(pauseDuration);
  }
}

void buzz(int pin, long frequency, long length) {
  // Indicate that we are playing a note
  digitalWrite(13, HIGH); 
  
  // How many cycles?
  long cycles = frequency * length / 1000;

  // How long is the delay between transitions (on/off) in microseconds?
  long delayTime = 1000000 / frequency / 2;
  
  for (long i = 0; i < cycles; i++) {
    digitalWrite(pin, HIGH);
    delayMicroseconds(delayTime);
    digitalWrite(pin, LOW);
    delayMicroseconds(delayTime);
  }
  
  digitalWrite(13, LOW);

}

